name: CD

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_BACKEND: ghcr.io/${{ github.repository_owner }}/chatflow-backend
  IMAGE_FRONTEND: ghcr.io/${{ github.repository_owner }}/chatflow-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tags
        id: meta
        run: |
          SHA_TAG=${GITHUB_SHA::7}
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            echo "latest_tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:${{ steps.meta.outputs.sha_tag }}
            ${{ env.IMAGE_BACKEND }}:${{ steps.meta.outputs.latest_tag || '' }}

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:${{ steps.meta.outputs.sha_tag }}
            ${{ env.IMAGE_FRONTEND }}:${{ steps.meta.outputs.latest_tag || '' }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ secrets.SSH_HOST && secrets.SSH_USER && secrets.SSH_KEY }}
    steps:
      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          printf "Host target\n  HostName %s\n  User %s\n  IdentityFile ~/.ssh/id_rsa\n  StrictHostKeyChecking no\n" "$SSH_HOST" "$SSH_USER" >> ~/.ssh/config
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}

      - name: Remote deploy via SSH
        run: |
          ssh target << 'EOF'
          set -e
          docker login ghcr.io -u $GITHUB_ACTOR -p $GITHUB_TOKEN
          export BACKEND_IMAGE=${{ env.IMAGE_BACKEND }}:${{ github.sha }}
          export FRONTEND_IMAGE=${{ env.IMAGE_FRONTEND }}:${{ github.sha }}
          cd /opt/chatflow || mkdir -p /opt/chatflow && cd /opt/chatflow
          cat > docker-compose.yml <<YML
          version: '3.8'
          services:
            backend1:
              image: $BACKEND_IMAGE
              env_file: .env
            backend2:
              image: $BACKEND_IMAGE
              env_file: .env
            frontend:
              image: $FRONTEND_IMAGE
            nginx:
              image: nginx:alpine
              ports:
                - "80:80"
              volumes:
                - ./nginx.conf:/etc/nginx/nginx.conf
              depends_on:
                - backend1
                - backend2
                - frontend
          YML
          docker compose pull
          docker compose up -d --remove-orphans
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

